//?üîπ React.memo ‚Äì –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã–π —Ä–µ—Ä–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, –µ—Å–ª–∏ –ø—Ä–æ–ø—Å—ã –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å.

import { memo, useState } from "react";

// –±–µ–∑ memo const HeavyComponent = ({ count }: { count: number }) => {
// *üî¥ –ü—Ä–æ–±–ª–µ–º–∞: HeavyComponent —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –¥–∞–∂–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ otherState, —Ö–æ—Ç—è count –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è.

const HeavyComponent = memo(({ count }: { count: number }) => {
  console.log("üîÑ HeavyComponent —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è!");
  return <div>–°—á—ë—Ç—á–∏–∫: {count}</div>;
});

export default function Page() {
  const [count, setCount] = useState(0);
  const [otherState, setOtherState] = useState(false);

  return (
    <div>
      <button onClick={() => setCount(count + 1)}>–£–≤–µ–ª–∏—á–∏—Ç—å —Å—á—ë—Ç—á–∏–∫</button>
      <button onClick={() => setOtherState(!otherState)}>
        –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      </button>
      <HeavyComponent count={count} />
    </div>
  );
}
